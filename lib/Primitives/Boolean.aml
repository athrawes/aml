True =  a _ -> a
False = _ b -> b

type Boolean =
  | True of True
  | False of False

(and) = (a: Boolean) (b: Boolean) -> a b a

(or) = (a: Boolean) (b: Boolean): Boolean -> a a b

(xor) = is >> not

not = (condition: Boolean): Boolean -> flip condition

(is) : 'a -> 'a -> Boolean
