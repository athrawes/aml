Effect = use "Control/Effect"
{ List, [], ++, :: } = use "Collections/List"

module Writer extends Effect

type Writer<'a> = { value: 'a, logs: List<String> }

from = value -> { value, logs: [] }

then = writer callback ->
  next = callback writer.value
  { value: next.value, logs: writer.logs ++ next.logs }

# Write a log to the Writer, without modifying the value
write : Writer<'a> -> String -> Writer<'a>
write = writer log -> { value: writer.value, logs: writer.logs ++ (log :: []) }
