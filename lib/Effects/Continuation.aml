type Continuation 'r 'a of ('a -> 'r) -> 'r

run = (self: Continuation 'r 'a) (callback: 'a -> 'r): 'r ->
  with self [k] => k callback

instance (Continuation 'r) :> Effect
  from = (value: 'r): Continuation 'r 'a -> Continuation ((callback: 'a) -> callback value)

  then =
    (self: Continuation 'r 'a) ->
    (callback: ('a -> Continuation 'r 'b)): Continuation 'r 'b ->
      with self [ma] => Continuation (
        continue -> run ma (value -> run (callback value) continue)
      )
