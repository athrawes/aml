type :continuation<'r, 'a> of ('a -> 'r) -> 'r

run : :continuation<'r, 'a> -> ('a -> 'r) -> 'r
run = self callback ->
  with self [k] => k callback

instance (:continuation<'r, _>) :> Effect
  from : 'r -> :continuation<'r, 'a>
  from = value -> :continuation ((callback 'a) -> callback value)

  then : :continuation<'r, 'a> -> ('a -> :continuation<'r, 'b>) -> :continuation<'r, 'b>
  then = self callback ->
    with self [ma] => :continuation (
      continue -> run ma (value -> run (callback value) continue)
    )
