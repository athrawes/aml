Effect = use "Control/Effect"

module Async :> Effect

type Resolved<'a>
type Pending<'a> of (_ -> Resolved<'a>)

type Async<'a> =
  | Resolved<'a>
  | Pending<'a>

from = Resolved

then : Async<'a> -> ('a -> Async<'b>) -> Async<'b>
then = self callback ->
  match self
  | Resolved (_) => callback self
  | Pending (suspended) => Pending (_ -> then (suspended _) callback)
