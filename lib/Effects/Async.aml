module Async extends Monad

type Resolved<'a>
type Pending<'a> of (_ → Resolved<'a>)

type Async<'a> ≔
  | Resolved<'a>
  | Pending<'a>

from ≔ Resolved

chain : Async<'a> → ('a → Async<'b>) → Async<'b>
chain ≔ async → callback →
  match async
  | Resolved (_) ⇒ callback async
  | Pending (suspended) ⇒ Pending (_ → chain (suspended _) callback)
