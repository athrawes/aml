type UnsignedInteger =
	| u8 of INTRINSIC_UNSIGNED_8BIT
	| u16 of INTRINSIC_UNSIGNED_16BIT
	| u32 of INTRINSIC_UNSIGNED_32BIT
	| u64 of INTRINSIC_UNSIGNED_64BIT
	| u128 of INTRINSIC_UNSIGNED_128BIT
	| usize of INTRINSIC_UNSIGNED_DEFAULT_SIZE

	ùüò = 0b0

type SignedInteger =
	| i8 of INTRINSIC_SIGNED_8BIT
	| i16 of INTRINSIC_SIGNED_16BIT
	| i32 of INTRINSIC_SIGNED_32BIT
	| i64 of INTRINSIC_SIGNED_64BIT
	| i128 of INTRINSIC_SIGNED_128BIT
	| isize of INTRINSIC_SIGNED_DEFAULT_SIZE

	ùüò = 0b0

# A natural number is a non-negative integer.
type ‚Ñï = UnsignedInteger

type ‚Ñ§ = Integer
type Integer extends
	Orderable<_>,
	=
	| UnsignedInteger
	| SignedInteger

	(==) = a -> b -> case (a, b)
		| (`t _, `t _) ‚üπ INTRINSIC_OPERATOR_EQUALS a b
		| (`t _, `u _) when sizeof<`t> > sizeof<`u> ‚üπ
			INTRINSIC_OPERATOR_EQUALS a (b :> `t)
		| (`t _, `u _) ‚üπ
			INTRINSIC_OPERATOR_EQUALS (a :> `u) b

# IEEE 754 floating point numbers.
type Float =
	| f32 of INTRINSIC_FLOAT_32BIT
	| f64 of INTRINSIC_FLOAT_64BIT

# A rational number is a number that can be expressed as the quotient or
# fraction p/q of two integers, a numerator p and a non-zero denominator q.
# In AML, this is represented by a pair of an integer and a natural number,
# where the first number is the numerator and the second number is the
# denominator. Note that the denominator cannot be 0.
type Rational = Pair<‚Ñ§, Omit<‚Ñï, ùüò>>
type ‚Ñö = Rational

# A real number is a value that represents a quantity along a continuous line.
# In AML, this is represented by a sum type of integers, rationals, and floats.
# Note that this is not a complete representation of the real numbers, as it
# does not include irrational numbers such as œÄ or ‚àö2 due to the limits of
# floating point arithmetic. Approximations of these numbers can be represented
# using the `Float` type.
type ‚Ñù = Real
type Real =
	| Integer
	| Rational
	| Float

# A complex number is a number that can be expressed in the form a + b‚Öà, where a
# is the real part and b is the imaginary part of the complex number. In AML,
# this is represented by a pair of real numbers, where the first number is the
# real part and the second number is the imaginary part.
type Complex = Pair<‚Ñù, ‚Ñù>
type ‚ÑÇ = Complex
