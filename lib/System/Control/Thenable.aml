module Thenable =
  /**
   * @docs-from ./Thenable.docs.md#`then`
   */
  then: M<A> -> (A -> M<B>) -> M<B>

  /**
   * @docs-from ./Thenable.docs.md#`chain`
   * @include then
   * @reduce-autosuggest
   */
  chain = then

  /**
   * @docs-from ./Thenable.docs.md#`bind`
   * @include then
   * @reduce-autosuggest
   */
  bind = then

  /**
   * @docs-from ./Thenable.docs.md#`=<<`
   * @include then
   */
  =<< : infix = swap-args then

  /**
   * @docs-from ./Thenable.docs.md#`>>=`
   * @include then
   */
  >>= : infix = then

  /**
   * @docs-from ./Thenable.docs.md#`chain-compose`
   */
  chain-compose
    : (A -> M<B>) -> (B -> M<C>) -> (A -> M<C>)
    = callback-ab -> callback-bc ->
      callback-ab >> (chain callback-bc)

  /**
   * @docs-from ./Thenable.docs.md#`>=>`
   * @include chain-compose
   */
  >=> : infix = chain-compose
