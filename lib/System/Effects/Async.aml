Effect = use "System/Control/Effect"

module Async :> Effect =
  type Resolved<A>
  type Pending<A> of (_ -> Resolved<A>)

  type Async<A> =
    | Resolved<A>
    | Pending<A>

  # @inheritdoc
  from = Resolved

  # @inheritdoc
  then
    : Async<A> -> (A -> Async<B>) -> Async<B>
    = async -> callback ->
      match async
      | Resolved { value } -> callback value
      | Pending { suspended } -> Pending<B> (_ -> then (suspended _) callback)
